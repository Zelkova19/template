name: Python Tests

on: [ push, pull_request ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Python test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Set JAVA_HOME
        run: echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(with java))))" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root

      - name: Run test
        run: |
          export JAVA_HOME=$JAVA_HOME
          poetry run pytest ./tests --alluredir=./allure-results --disable-warnings
        continue-on-error: true

      - name: Run Coverage
        if: ${{ always()}}
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          python -m bot

          pip install --upgrade pip
          pip install poetry
          poetry install --no-root --with lint

      - name: Run MyPy linter
        if: ${{ always() }}
        run: poetry run mypy . --explicit-package-bases

      - name: Run Ruff linter
        if: ${{ always() }}
        run: poetry run ruff check . --fix

      - name: Run Tests with Pytest
        if: ${{ always() }}
        run: poetry run pytest ./tests --alluredir=./allure-results --disable-warnings

      - name: Archive allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.34.1/allure-2.34.1.tgz
          sudo tar -xvzf allure-2.34.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.34.1/bin/allure /usr/bin/allure

      - name: Download allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./allure-results
      - run: allure generate -c allure-results -o _site
      - name: Store report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: ./_site
          retention-days: 1

  publish-report:

    runs-on: ubuntu-latest

    needs: generate-report

    name: Publish report

    steps:

      - uses: actions/checkout@v4

      - name: Download site report

        uses: actions/download-artifact@v4

      - name: Upload pages artifact

        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages

        id: deployment

        uses: actions/deploy-pages@v4
      - run: echo "https://zelkova19.github.io/dm-api-gitlab/"
